### Configuration file
quarkus.http.port=8080
%dev.quarkus.http.port=8080
%test.quarkus.http.port=8081
%full.quarkus.http.port=8082
quarkus.http.test-port=8083
## LOG
quarkus.log.level=INFO
%dev.quarkus.log.level=INFO
%dev.quarkus.log.file.enable=true
## Jacoco
quarkus.jacoco.title=com.syntifi.ori
# Send output to a trace.log file under the project log directory
%dev.quarkus.log.file.path=/tmp/debug.log
%dev.quarkus.log.file.level=DEBUG
%dev.quarkus.log.file.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%name
%dev.quarkus.hibernate-orm.log.sql=false
%test.quarkus.hibernate-orm.log.sql=false
## OpenAPI
quarkus.smallrye-openapi.path=/swagger
quarkus.swagger-ui.always-include=true
mp.openapi.extensions.smallrye.info.title=ORI - Onchain Risk Intelligence API
%dev.mp.openapi.extensions.smallrye.info.title=ORI - Onchain Risk Intelligence API (development)
%test.mp.openapi.extensions.smallrye.info.title=ORI - Onchain Risk Intelligence API (test)
mp.openapi.extensions.smallrye.info.version=0.0.1
mp.openapi.extensions.smallrye.info.description=Onchain risk analytics and Intelligence tool
mp.openapi.extensions.smallrye.info.contact.email=contact@syntifi.com
mp.openapi.extensions.smallrye.info.contact.name=Syntifi
mp.openapi.extensions.smallrye.info.contact.url=http://www.syntifi.com/contact
mp.openapi.extensions.smallrye.info.license.name=Apache 2
mp.openapi.extensions.smallrye.info.license.url=https://raw.githubusercontent.com/syntifi/ori/main/LICENSE
quarkus.swagger-ui.theme=material
## AML rules
ori.aml.reporting-threshold=${ORI_AML_REPORTING_THRESHOLD:10000}
ori.aml.long-window=${ORI_AML_LONG_WINDOW_DAYS:30}
ori.aml.mid-window=${ORI_AML_MID_WINDOW_DAYS:14}
ori.aml.short-window=${ORI_AML_SHORT_WINDOW_DAYS:7}
ori.aml.max-trace-coin-length=${ORI_AML_MAX_TRACE_LENGTH:200}
ori.aml.min-number-transactions=${ORI_AML_MIN_TRANSACTIONS:10}
%dev.ori.aml.reporting-threshold=10000
%dev.ori.aml.long-window=30
%dev.ori.aml.mid-window=14
%dev.ori.aml.short-window=7
%dev.ori.aml.max-trace-coin-length=200
%dev.ori.aml.min-number-transactions=10
## CORS
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:3000
quarkus.http.cors.headers=accept, origin, authorization, content-type, x-requested-with
quarkus.http.cors.methods=GET,POST,DELETE,OPTIONS
## REFACTOR
quarkus.ssl.native=false
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/ori_api
%dev.quarkus.datasource.username=ori_api
%dev.quarkus.datasource.password=ori_api
%dev.quarkus.hibernate-orm.database.generation=update
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://${ORI_POSTGRES_HOST}:${ORI_POSTGRES_PORT}/${ORI_POSTGRES_DB}
%prod.quarkus.datasource.username=${ORI_POSTGRES_USER}
%prod.quarkus.datasource.password=${ORI_POSTGRES_PASSWORD}
%prod.quarkus.hibernate-orm.database.generation=create
quarkus.container-image.registry=syntifi.com
quarkus.container-image.group=ori
quarkus.container-image.name=ori-api-jvm
quarkus.container-image.build=true
quarkus.container-image.additional-tags=latest
#include frontend files to native image
quarkus.native.additional-build-args=-H:ResourceConfigurationFiles=resources-config.json